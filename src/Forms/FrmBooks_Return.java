/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.Books;
import Classes.History;
import Classes.Return;
import Connection.TableNewColors;
import Connection.Tools;
import java.awt.Color;
import java.awt.Cursor;
import java.io.File;
import static javax.imageio.ImageIO.getCacheDirectory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Ranim
 */
public class FrmBooks_Return extends javax.swing.JFrame {

    /**
     * Creates new form FrmReturn
     */
    static String email;
    static String card;
    static int ConstructorNumber;
    
    public FrmBooks_Return() {
        initComponents();
        Tools.ToDay(date);
        tableHistory.setDefaultRenderer(Object.class, new TableNewColors());
        Tools.PutImageInLable("ReturnWh.png", lblpic, 130, 130);
          Tools.PutImageInLable("back32.png", lblback, 32, 32);
           Tools.PutImageInLable("exitW.png", lblexit, 32, 32);
            Tools.PutImageInLable("Ascending_White.png", asc, 30, 30);
             Tools.PutImageInLable("Descending_White.png", desc, 30, 30);
              Tools.PutImageInLable("Search-icon-White.png", lblSearch, 25, 25);
              ConstructorNumber = 0;
    }
    public FrmBooks_Return(String card, String name,String Email){
        initComponents();
        tableHistory.setDefaultRenderer(Object.class, new TableNewColors());
        Tools.ToDay(date);
        Tools.PutImageInLable("ReturnWh.png", lblpic, 130, 130);
          Tools.PutImageInLable("back32.png", lblback, 32, 32);
           Tools.PutImageInLable("exitW.png", lblexit, 32, 32);
            Tools.PutImageInLable("Ascending_White.png", asc, 30, 30);
            Tools.PutImageInLable("Descending_White.png", desc, 30, 30);
               Tools.PutImageInLable("Search-icon-White.png", lblSearch, 25, 25);
         txtCardNum.setText(card);
         this.card = card;
                 
         txtName.setText(name);
         email = Email;
        String Statement = " Select * from History where CardNumber ="+card +" AND (Status = 'borrowed' OR Status = 'delayed') ;";
        
       Connection.Connections.FillCustomRows(Statement, tableHistory);
       MenuBar.setVisible(true);
       ConstructorNumber = 0;
     // history.GetSomeRows(Statement, tableHistory);
        
    }
    public FrmBooks_Return(String card, String name,String Email,int ConstructorNumber){
        initComponents();
        tableHistory.setDefaultRenderer(Object.class, new TableNewColors());
        Tools.ToDay(date);
        Tools.PutImageInLable("ReturnWh.png", lblpic, 130, 130);
          Tools.PutImageInLable("back32.png", lblback, 32, 32);
           Tools.PutImageInLable("exitW.png", lblexit, 32, 32);
            Tools.PutImageInLable("Ascending_White.png", asc, 30, 30);
            Tools.PutImageInLable("Descending_White.png", desc, 30, 30);
               Tools.PutImageInLable("Search-icon-White.png", lblSearch, 25, 25);
         txtCardNum.setText(card);
         this.card = card;
                 
         txtName.setText(name);
         email = Email;
        String Statement = " Select * from History where CardNumber ="+card +" AND (Status = 'borrowed' OR Status = 'delayed') ;";
        
       Connection.Connections.FillCustomRows(Statement, tableHistory);
       MenuBar.setVisible(false);
       this.ConstructorNumber = ConstructorNumber ;
        
    }
    private boolean isEmpty(){
        //txtCardNum.getText().equals("") ||  || txtName.getText().equals("")
        if(txtISBN.getText().equals("") ){
            return true;
        }
        return false;
    }
History history =new History();
Return retur = new Return();
Books book = new Books();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupbtn = new javax.swing.ButtonGroup();
        panel1 = new java.awt.Panel();
        lblpic = new javax.swing.JLabel();
        lblback = new javax.swing.JLabel();
        lblexit = new javax.swing.JLabel();
        btnReturn = new Controls.JMyButtonPurp();
        jLabel2 = new javax.swing.JLabel();
        txtCardNum = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtdays = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFee = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtdelay = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtISBN = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        panel2 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHistory = new javax.swing.JTable();
        date = new javax.swing.JLabel();
        asc = new javax.swing.JLabel();
        desc = new javax.swing.JLabel();
        txtSearch = new Controls.JTextBox();
        lblSearch = new javax.swing.JLabel();
        radISBN = new javax.swing.JRadioButton();
        radTitle = new javax.swing.JRadioButton();
        radStatus = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        MenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        MenuFilePrint = new javax.swing.JMenuItem();
        MenuFileBackUp = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        MenuFileRefresh = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        MenuFileHome = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        MenuFileQuit = new javax.swing.JMenuItem();
        MenuMoveMenu = new javax.swing.JMenu();
        MenuMoveToHome = new javax.swing.JMenuItem();
        MenuMoveCustomers = new javax.swing.JMenuItem();
        MenuMoveHistory = new javax.swing.JMenuItem();
        MenuMoveManagement = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(102, 0, 102));

        lblpic.setBackground(new java.awt.Color(102, 0, 102));

        lblback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblbackMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblbackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblbackMouseExited(evt);
            }
        });

        lblexit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblexitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblexitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblexitMouseExited(evt);
            }
        });

        btnReturn.setText("Return Book");
        btnReturn.setFont(new java.awt.Font("Big Caslon", 0, 24)); // NOI18N
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("* Card Number:");

        txtCardNum.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtCardNum.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("* Name:");

        txtName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtName.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(" borrowed ");

        txtdays.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtdays.setForeground(new java.awt.Color(255, 255, 255));
        txtdays.setText("___");

        jLabel6.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("days ago.");

        jLabel3.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("* Fee:");

        txtFee.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtFee.setForeground(new java.awt.Color(255, 255, 255));
        txtFee.setText("_______");

        jLabel5.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("SEK");

        jLabel8.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(" book was ");

        txtdelay.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtdelay.setForeground(new java.awt.Color(255, 255, 255));
        txtdelay.setText("___");

        jLabel10.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("days delayed.");

        jLabel9.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("* Book ");

        txtISBN.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtISBN.setForeground(new java.awt.Color(255, 255, 255));
        txtISBN.setText("___________");

        jLabel11.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("was");

        jLabel12.setFont(new java.awt.Font("Big Caslon", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("since the");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtdelay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtISBN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(panel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(58, 58, 58)))
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCardNum)
                                    .addComponent(txtName)))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtdays, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFee)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12))))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 6, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblpic, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblexit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblback, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblpic, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCardNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtName))
                .addGap(29, 29, 29)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtISBN)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtdays)
                    .addComponent(jLabel6))
                .addGap(32, 32, 32)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFee)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtdelay)
                    .addComponent(jLabel10))
                .addGap(46, 46, 46)
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblexit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        panel2.setBackground(new java.awt.Color(44, 0, 44));
        panel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Big Caslon", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Return");

        tableHistory.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        tableHistory.setForeground(new java.awt.Color(255, 255, 255));
        tableHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CardNumber", "ISBN", "Title", "Author", "Status", "Rental Date", "Due to"
            }
        ));
        tableHistory.setSelectionBackground(new java.awt.Color(102, 102, 102));
        tableHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHistoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableHistory);

        date.setFont(new java.awt.Font("Big Caslon", 2, 14)); // NOI18N
        date.setForeground(new java.awt.Color(255, 255, 255));
        date.setText("Date");

        asc.setToolTipText("Order items Ascending ");
        asc.setMaximumSize(new java.awt.Dimension(50, 50));
        asc.setMinimumSize(new java.awt.Dimension(50, 50));
        asc.setPreferredSize(new java.awt.Dimension(50, 50));
        asc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ascMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ascMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ascMouseExited(evt);
            }
        });

        desc.setToolTipText("Order items Descending");
        desc.setMaximumSize(new java.awt.Dimension(50, 50));
        desc.setMinimumSize(new java.awt.Dimension(50, 50));
        desc.setPreferredSize(new java.awt.Dimension(50, 50));
        desc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                descMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                descMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                descMouseExited(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        lblSearch.setToolTipText("Search");
        lblSearch.setMaximumSize(new java.awt.Dimension(50, 50));
        lblSearch.setMinimumSize(new java.awt.Dimension(50, 50));
        lblSearch.setPreferredSize(new java.awt.Dimension(50, 50));
        lblSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSearchMouseExited(evt);
            }
        });

        radISBN.setBackground(new java.awt.Color(44, 0, 44));
        radISBN.setFont(new java.awt.Font("Big Caslon", 1, 18)); // NOI18N
        radISBN.setForeground(new java.awt.Color(255, 255, 255));
        radISBN.setSelected(true);
        radISBN.setText("ISBN");

        radTitle.setBackground(new java.awt.Color(44, 0, 44));
        radTitle.setFont(new java.awt.Font("Big Caslon", 1, 18)); // NOI18N
        radTitle.setForeground(new java.awt.Color(255, 255, 255));
        radTitle.setText("Title");

        radStatus.setBackground(new java.awt.Color(44, 0, 44));
        radStatus.setFont(new java.awt.Font("Big Caslon", 1, 18)); // NOI18N
        radStatus.setForeground(new java.awt.Color(255, 255, 255));
        radStatus.setText("Status");

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                                .addComponent(radISBN)
                                .addGap(29, 29, 29)
                                .addComponent(radTitle)
                                .addGap(29, 29, 29)
                                .addComponent(radStatus)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                                .addGap(282, 282, 282)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(asc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(54, Short.MAX_VALUE))))
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(asc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(desc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radISBN)
                            .addComponent(radTitle)
                            .addComponent(radStatus))
                        .addGap(24, 24, 24)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );

        MenuBar.setBackground(new java.awt.Color(44, 0, 44));
        MenuBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(44, 0, 44), new java.awt.Color(66, 0, 66), null, null));
        MenuBar.setForeground(new java.awt.Color(66, 0, 66));
        MenuBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                MenuBarMouseReleased(evt);
            }
        });

        jMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("File");
        jMenu1.add(jSeparator4);

        MenuFilePrint.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuFilePrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Print_Black.png"))); // NOI18N
        MenuFilePrint.setText("Print");
        jMenu1.add(MenuFilePrint);

        MenuFileBackUp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuFileBackUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/BackUp.png"))); // NOI18N
        MenuFileBackUp.setText("Back Up");
        MenuFileBackUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileBackUpActionPerformed(evt);
            }
        });
        jMenu1.add(MenuFileBackUp);
        jMenu1.add(jSeparator2);

        MenuFileRefresh.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        MenuFileRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Refresh_Black.png"))); // NOI18N
        MenuFileRefresh.setText("Refresh");
        MenuFileRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileRefreshActionPerformed(evt);
            }
        });
        jMenu1.add(MenuFileRefresh);
        jMenu1.add(jSeparator5);

        MenuFileHome.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuFileHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Home_Black.png"))); // NOI18N
        MenuFileHome.setText("Menu");
        MenuFileHome.setToolTipText("Go back to Menu");
        MenuFileHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileHomeActionPerformed(evt);
            }
        });
        jMenu1.add(MenuFileHome);
        jMenu1.add(jSeparator1);

        MenuFileQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuFileQuit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Quit_Red.png"))); // NOI18N
        MenuFileQuit.setText("Quit");
        MenuFileQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileQuitActionPerformed(evt);
            }
        });
        jMenu1.add(MenuFileQuit);

        MenuBar.add(jMenu1);

        MenuMoveMenu.setForeground(new java.awt.Color(255, 255, 255));
        MenuMoveMenu.setText("Move ");

        MenuMoveToHome.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuMoveToHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Home_Black.png"))); // NOI18N
        MenuMoveToHome.setText("Menu");
        MenuMoveToHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMoveToHomeActionPerformed(evt);
            }
        });
        MenuMoveMenu.add(MenuMoveToHome);

        MenuMoveCustomers.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuMoveCustomers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Customers_Black.png"))); // NOI18N
        MenuMoveCustomers.setText("Customers");
        MenuMoveCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMoveCustomersActionPerformed(evt);
            }
        });
        MenuMoveMenu.add(MenuMoveCustomers);

        MenuMoveHistory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuMoveHistory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_History_Black.png"))); // NOI18N
        MenuMoveHistory.setText("History");
        MenuMoveHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMoveHistoryActionPerformed(evt);
            }
        });
        MenuMoveMenu.add(MenuMoveHistory);

        MenuMoveManagement.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuMoveManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Management_Black.png"))); // NOI18N
        MenuMoveManagement.setText("Management");
        MenuMoveManagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMoveManagementActionPerformed(evt);
            }
        });
        MenuMoveMenu.add(MenuMoveManagement);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/books.png"))); // NOI18N
        jMenuItem1.setText("Books");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        MenuMoveMenu.add(jMenuItem1);

        MenuBar.add(MenuMoveMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      tableHistory.getTableHeader().setBackground(new Color (102,00,102));
        tableHistory.getTableHeader().setForeground(Color.white);
     tableHistory.getTableHeader().setReorderingAllowed(false); 
     tableHistory.getTableHeader().setResizingAllowed(false); 
     
     groupbtn.add(radISBN);
     groupbtn.add(radTitle);
     groupbtn.add(radStatus);
     
     
      lblexit.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      lblback.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      asc.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
          desc.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
          lblSearch.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
          
    }//GEN-LAST:event_formWindowOpened

    private void lblbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblbackMouseClicked
        if(ConstructorNumber == 0 ){
            this.dispose();
            Connection.Tools.OpenForm(new FrmManagement());
        }else{
            this.dispose();
            Connection.Tools.OpenForm(new FrmCustomer_Menu(email));
        }
        

    }//GEN-LAST:event_lblbackMouseClicked

    private void lblbackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblbackMouseEntered
        Tools.PutImageInLable("back32.png", lblback, 35, 35);
    }//GEN-LAST:event_lblbackMouseEntered

    private void lblbackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblbackMouseExited
        Tools.PutImageInLable("back32.png", lblback, 32, 32);
    }//GEN-LAST:event_lblbackMouseExited

    private void lblexitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblexitMouseClicked

        int choice = JOptionPane.showOptionDialog(null,
            "Are you sure you want to quit?",
            "Quit",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null, null, null);

        if (choice == JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_lblexitMouseClicked

    private void lblexitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblexitMouseEntered
        Tools.PutImageInLable("exitW.png", lblexit, 35, 35);
        
    }//GEN-LAST:event_lblexitMouseEntered

    private void lblexitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblexitMouseExited
        Tools.PutImageInLable("exitW.png", lblexit, 32, 32);
    }//GEN-LAST:event_lblexitMouseExited

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
       if(!isEmpty()){
            if (ConstructorNumber == 0){
                    String card = txtCardNum.getText();
                    String Statement = " Select * from History where CardNumber =" +card +" AND (Status = 'borrowed' OR Status = 'delayed') ;";
                    String isbn = txtISBN.getText();
                    String name = txtName.getText();
                    String today = Tools.ToDay();
                    String time = Tools.currentTime();
                    String delayed = txtdelay.getText();
                    int row= tableHistory.getSelectedRow();
                    String Email= email;
                    int fee = Integer.parseInt(txtFee.getText());
                    int Row = tableHistory.getSelectedRow();
                    retur.setISBN(Integer.parseInt(tableHistory.getValueAt(Row, 1).toString()));
                    retur.setCardNumber(Integer.parseInt(txtCardNum.getText()));
                    retur.UpdateStatusAvailable();


                    history.setISBN(Integer.parseInt(tableHistory.getValueAt(Row, 1).toString()));
                    history.setReturnedDate(Tools.ToDay());
                    history.UpdateReturned();

                    book.setISBN(Integer.parseInt(tableHistory.getValueAt(Row, 1).toString()));
                    book.UpdateReturned();
                    if(fee<=0){
                    Tools.SendEmail(Email,"Greetings from Library System", "Dear "+name+", \n "
                            + "book "+ isbn+" has been successfully returned on "+today+" at "+time+"."
                                    + "\n \n Thank you!");
                    }
                    else{
                     Tools.SendEmail(Email,"Greetings from Library System", "Dear "+name+", \n "
                             + "book "+ isbn+" has been successfully returned on "+today+" at "+time+".\n"
                                     + " Unfortunately you were "+delayed+" days delayed, so you will have to pay "+fee+" SEK."
                                             + " \n \n Thank you!");
                    }
                    Connection.Connections.FillCustomRows(Statement, tableHistory);
                    txtISBN.setText("");
                    txtFee.setText("");
                    txtdays.setText("");
                    txtdelay.setText("");
            }else if (ConstructorNumber == 1){
                String card = txtCardNum.getText();
                    String Statement = " Select * from History where CardNumber =" +card +" AND (Status = 'borrowed' OR Status = 'delayed') ;";
                    String isbn = txtISBN.getText();
                    String name = txtName.getText();
                    String today = Tools.ToDay();
                    String time = Tools.currentTime();
                    String delayed = txtdelay.getText();
                    int row= tableHistory.getSelectedRow();
                    String Email= email;
                    int fee = Integer.parseInt(txtFee.getText());
                    int Row = tableHistory.getSelectedRow();
                    retur.setISBN(Integer.parseInt(tableHistory.getValueAt(Row, 1).toString()));
                    retur.setCardNumber(Integer.parseInt(txtCardNum.getText()));
                    retur.UpdateStatusAvailable();


                    history.setISBN(Integer.parseInt(tableHistory.getValueAt(Row, 1).toString()));
                    history.setReturnedDate(Tools.ToDay());
                    history.UpdateReturned();

                    book.setISBN(Integer.parseInt(tableHistory.getValueAt(Row, 1).toString()));
                    book.UpdateReturned();
                    Tools.MsgBoxInfo("Please go to the library and put the book in the return box \noutside the library building\nwithin two hours :) ", "Successfully returned book");

                    if(fee<=0){
                    Tools.SendEmail(Email,"Greetings from Library System", "Dear "+name+", \n "
                            + "book "+ isbn+" has been successfully returned on "+today+" at "+time+"."
                                    + "\n \n Thank you!");
                    }
                    else{
                     Tools.SendEmail(Email,"Greetings from Library System", "Dear "+name+", \n "
                             + "book "+ isbn+" has been successfully returned on "+today+" at "+time+".\n"
                                     + " Unfortunately you were "+delayed+" days delayed, so you will have to pay "+fee+" SEK."
                                             + " \n \n Thank you!");
                    }
                    Connection.Connections.FillCustomRows(Statement, tableHistory);
                    txtISBN.setText("");
                    txtFee.setText("");
                    txtdays.setText("");
                    txtdelay.setText("");
            }    
       }else{
           Tools.MsgBoxErrorI("Please select a customer","Missing info");
       }
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnResetActionPerformed

    
    private void OrderItems(String OrderBy){
        
     String Statement = "Select * from History where CardNumber ="+card +" AND (Status = 'borrowed' OR Status = 'delayed') order by ";
        if (radISBN.isSelected()){
            Statement += " ISBN " + OrderBy;
        }
        else if (radTitle.isSelected()){
            Statement += " Title " + OrderBy;
            
        }
        
        else if (radStatus.isSelected()){
             Statement += " Status " + OrderBy;
        }
        else {
             Statement += " ISBN " + OrderBy;
        }
        history.GetSomeRows(Statement, tableHistory);
    }
    
    private void ascMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ascMouseClicked
        OrderItems("asc");
    }//GEN-LAST:event_ascMouseClicked

    private void ascMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ascMouseEntered
        Tools.PutImageInLable("Ascending_White.png", asc, 40, 40);
    }//GEN-LAST:event_ascMouseEntered

    private void ascMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ascMouseExited
        Tools.PutImageInLable("Ascending_White.png", asc, 30, 30);
    }//GEN-LAST:event_ascMouseExited

    private void descMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descMouseClicked
        OrderItems("desc");
    }//GEN-LAST:event_descMouseClicked

    private void descMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descMouseEntered
        Tools.PutImageInLable("Descending_White.png", desc, 40, 40);
    }//GEN-LAST:event_descMouseEntered

    private void descMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descMouseExited
        Tools.PutImageInLable("Descending_White.png", desc, 30, 30);
    }//GEN-LAST:event_descMouseExited

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void lblSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseClicked
        String Statement = "Select * from History where ";
        String Statement2 = " like '%"+ txtSearch.getText()+ "%' ";
        if (radISBN.isSelected()){
            Statement += " ISBN " + Statement2;
        }
        else if (radTitle.isSelected()){
            Statement += " Title " + Statement2;
        }
        else if (radStatus.isSelected()){
            Statement += " Status " + Statement2;
        }
        else {
            Statement += " ISBN " + Statement2;
        }

        history.GetSomeRows(Statement, tableHistory);
        int Row = tableHistory.getRowCount();
        if (Row == 0){
            Tools.MsgBoxErrorX("No result","no results were found");
           txtSearch.setText("");
            txtSearch.requestFocus();
        }
    }//GEN-LAST:event_lblSearchMouseClicked

    private void lblSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseEntered
        Tools.PutImageInLable("Search-icon-White.png", lblSearch, 30, 30);
    }//GEN-LAST:event_lblSearchMouseEntered

    private void lblSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseExited
        Tools.PutImageInLable("Search-icon-White.png", lblSearch, 25, 25);
    }//GEN-LAST:event_lblSearchMouseExited

    private void tableHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHistoryMouseClicked
        try {
          int Row = tableHistory.getSelectedRow();
          String date1 = tableHistory.getValueAt(Row, 5).toString();
          String isbn = tableHistory.getValueAt(Row, 1).toString();
          String date2 = Tools.ToDay();
          int days =  Tools.CalculateDays(date1, date2);
            txtdays.setText(String.valueOf(days) );
            int fee=0;
            int delay=0;
            if (days>14){
            fee = (days-14)*2; 
            delay= days-14;
            }
            
           txtFee.setText(String.valueOf(fee));
           txtdelay.setText(String.valueOf(delay));
           txtISBN.setText(String.valueOf(isbn));
            
        } catch (Exception e) {
           Tools.MsgBox(e.getMessage());
        }
         
    }//GEN-LAST:event_tableHistoryMouseClicked

    private void MenuFileBackUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileBackUpActionPerformed
        Tools.OpenForm(new Loading());
    }//GEN-LAST:event_MenuFileBackUpActionPerformed

    private void MenuFileRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileRefreshActionPerformed
      
    }//GEN-LAST:event_MenuFileRefreshActionPerformed

    private void MenuFileHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileHomeActionPerformed
        this.dispose();
        Tools.OpenForm(new Menu());
    }//GEN-LAST:event_MenuFileHomeActionPerformed

    private void MenuFileQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileQuitActionPerformed
        boolean check = Tools.YesNoChooserBox("Do you want to quit?", "Exit!");
        if(check){
            System.exit(0);
        }
    }//GEN-LAST:event_MenuFileQuitActionPerformed

    private void MenuMoveToHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMoveToHomeActionPerformed
        this.dispose();
        Tools.OpenForm(new Menu());
    }//GEN-LAST:event_MenuMoveToHomeActionPerformed

    private void MenuMoveCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMoveCustomersActionPerformed
        this.dispose();
        Tools.OpenForm(new FrmCustomers());
    }//GEN-LAST:event_MenuMoveCustomersActionPerformed

    private void MenuMoveHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMoveHistoryActionPerformed
        this.dispose();
        Tools.OpenForm(new FrmHistory());
    }//GEN-LAST:event_MenuMoveHistoryActionPerformed

    private void MenuMoveManagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMoveManagementActionPerformed
        this.dispose();
        Tools.OpenForm(new FrmManagement());
    }//GEN-LAST:event_MenuMoveManagementActionPerformed

    private void MenuBarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuBarMouseReleased
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_MenuBarMouseReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      this.dispose();
      Tools.OpenForm(new FrmBooks());
    }//GEN-LAST:event_jMenuItem1ActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBooks_Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBooks_Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBooks_Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBooks_Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmBooks_Return().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem MenuFileBackUp;
    private javax.swing.JMenuItem MenuFileHome;
    private javax.swing.JMenuItem MenuFilePrint;
    private javax.swing.JMenuItem MenuFileQuit;
    private javax.swing.JMenuItem MenuFileRefresh;
    private javax.swing.JMenuItem MenuMoveCustomers;
    private javax.swing.JMenuItem MenuMoveHistory;
    private javax.swing.JMenuItem MenuMoveManagement;
    private javax.swing.JMenu MenuMoveMenu;
    private javax.swing.JMenuItem MenuMoveToHome;
    private javax.swing.JLabel asc;
    private Controls.JMyButtonPurp btnReturn;
    private javax.swing.JLabel date;
    private javax.swing.JLabel desc;
    private javax.swing.ButtonGroup groupbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblback;
    private javax.swing.JLabel lblexit;
    private javax.swing.JLabel lblpic;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private javax.swing.JRadioButton radISBN;
    private javax.swing.JRadioButton radStatus;
    private javax.swing.JRadioButton radTitle;
    private javax.swing.JTable tableHistory;
    private javax.swing.JLabel txtCardNum;
    private javax.swing.JLabel txtFee;
    private javax.swing.JLabel txtISBN;
    private javax.swing.JLabel txtName;
    private Controls.JTextBox txtSearch;
    private javax.swing.JLabel txtdays;
    private javax.swing.JLabel txtdelay;
    // End of variables declaration//GEN-END:variables
}
