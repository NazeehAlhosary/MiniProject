/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.Books;
import Classes.History;
import Connection.Connections;
import Connection.TableNewColors;
import Connection.Tools;
import Controls.JMyButton;
import java.awt.Cursor;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Nazeeh
 */
public class FrmHistory extends javax.swing.JFrame {

    /**
     * Creates new form History
     */
    public FrmHistory() {
        initComponents();
        tableHistory.setDefaultRenderer(Object.class, new TableNewColors());
        setLabels();
        ClearInfo();
        CheckDelayedOrders();
        
    }
    
    public FrmHistory(String CardNumber) {
        super();
        initComponents();
        tableHistory.setDefaultRenderer(Object.class, new TableNewColors());
        setLabels();
        ClearInfo(CardNumber);
        CheckDelayedOrders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableHistory = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtSearch = new Controls.JTextBox();
        jLabel6 = new javax.swing.JLabel();
        radCardNumber = new javax.swing.JRadioButton();
        RadISBN = new javax.swing.JRadioButton();
        radTitle = new javax.swing.JRadioButton();
        radAuthor = new javax.swing.JRadioButton();
        radStatus = new javax.swing.JRadioButton();
        radRentalDate = new javax.swing.JRadioButton();
        radReturnDate = new javax.swing.JRadioButton();
        lblSearch = new javax.swing.JLabel();
        lblDescending = new javax.swing.JLabel();
        lblAscending = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtCardNumber = new Controls.JTextBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtISBN = new Controls.JTextBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRentalDate = new Controls.JTextBox();
        txtReturnDate = new Controls.JTextBox();
        lblAdd = new javax.swing.JLabel();
        lblExit = new javax.swing.JLabel();
        lblRefresh = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();
        lblUpdate = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileAdd = new javax.swing.JMenuItem();
        menuFileUpdate = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuFilePrint = new javax.swing.JMenuItem();
        menuFileBackup = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menuFileRefresh = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        menuFileMenu = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        menuFileQuit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        moveMenuMenu = new javax.swing.JMenuItem();
        moveMenuCustomers = new javax.swing.JMenuItem();
        moveMenuBooks = new javax.swing.JMenuItem();
        moveMenuManagement = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(66, 0, 66));
        setFocusable(false);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(44, 0, 44));

        tableHistory.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        tableHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Card Number", "ISBN", "Title", "Author", "Status", "Rental Date", "Return Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHistoryMouseClicked(evt);
            }
        });
        tableHistory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableHistoryKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tableHistory);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Big Caslon", 3, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/books-stack-from-top-view (1).png"))); // NOI18N
        jLabel5.setText("History");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Search");

        radCardNumber.setBackground(new java.awt.Color(44, 0, 44));
        buttonGroup1.add(radCardNumber);
        radCardNumber.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        radCardNumber.setForeground(new java.awt.Color(255, 255, 255));
        radCardNumber.setText("Card Number");

        RadISBN.setBackground(new java.awt.Color(44, 0, 44));
        buttonGroup1.add(RadISBN);
        RadISBN.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        RadISBN.setForeground(new java.awt.Color(255, 255, 255));
        RadISBN.setText("ISBN");

        radTitle.setBackground(new java.awt.Color(44, 0, 44));
        buttonGroup1.add(radTitle);
        radTitle.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        radTitle.setForeground(new java.awt.Color(255, 255, 255));
        radTitle.setText("Title");

        radAuthor.setBackground(new java.awt.Color(44, 0, 44));
        buttonGroup1.add(radAuthor);
        radAuthor.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        radAuthor.setForeground(new java.awt.Color(255, 255, 255));
        radAuthor.setText("Author");
        radAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAuthorActionPerformed(evt);
            }
        });

        radStatus.setBackground(new java.awt.Color(44, 0, 44));
        buttonGroup1.add(radStatus);
        radStatus.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        radStatus.setForeground(new java.awt.Color(255, 255, 255));
        radStatus.setText("Status");

        radRentalDate.setBackground(new java.awt.Color(44, 0, 44));
        buttonGroup1.add(radRentalDate);
        radRentalDate.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        radRentalDate.setForeground(new java.awt.Color(255, 255, 255));
        radRentalDate.setText("Rental Date");
        radRentalDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radRentalDateActionPerformed(evt);
            }
        });

        radReturnDate.setBackground(new java.awt.Color(44, 0, 44));
        buttonGroup1.add(radReturnDate);
        radReturnDate.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        radReturnDate.setForeground(new java.awt.Color(255, 255, 255));
        radReturnDate.setText("Return Date");

        lblSearch.setToolTipText("Search");
        lblSearch.setMaximumSize(new java.awt.Dimension(50, 50));
        lblSearch.setMinimumSize(new java.awt.Dimension(50, 50));
        lblSearch.setPreferredSize(new java.awt.Dimension(50, 50));
        lblSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSearchMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSearchMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSearchMouseEntered(evt);
            }
        });

        lblDescending.setToolTipText("Order items Descending");
        lblDescending.setMaximumSize(new java.awt.Dimension(50, 50));
        lblDescending.setMinimumSize(new java.awt.Dimension(50, 50));
        lblDescending.setPreferredSize(new java.awt.Dimension(50, 50));
        lblDescending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDescendingMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDescendingMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDescendingMouseEntered(evt);
            }
        });

        lblAscending.setToolTipText("Order items Ascending ");
        lblAscending.setMaximumSize(new java.awt.Dimension(50, 50));
        lblAscending.setMinimumSize(new java.awt.Dimension(50, 50));
        lblAscending.setPreferredSize(new java.awt.Dimension(50, 50));
        lblAscending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAscendingMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAscendingMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAscendingMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radCardNumber)
                                .addGap(18, 18, 18)
                                .addComponent(RadISBN)
                                .addGap(18, 18, 18)
                                .addComponent(radTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radAuthor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radRentalDate)
                                .addGap(4, 4, 4)
                                .addComponent(radReturnDate))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblDescending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAscending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radCardNumber)
                    .addComponent(RadISBN)
                    .addComponent(radTitle)
                    .addComponent(radAuthor)
                    .addComponent(radStatus)
                    .addComponent(radReturnDate)
                    .addComponent(radRentalDate))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDescending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAscending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(66, 0, 66));

        txtCardNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCardNumberActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Card Number");

        jLabel2.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ISBN");

        txtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtISBNActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Rental Date");

        jLabel4.setFont(new java.awt.Font("Big Caslon", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Return Date");

        txtReturnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReturnDateActionPerformed(evt);
            }
        });

        lblAdd.setToolTipText("Add history");
        lblAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblAddMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAddMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAddMouseEntered(evt);
            }
        });

        lblExit.setToolTipText("Exit");
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblExitMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblExitMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblExitMouseEntered(evt);
            }
        });

        lblRefresh.setToolTipText("Refresh table");
        lblRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblRefreshMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblRefreshMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblRefreshMouseEntered(evt);
            }
        });

        lblBack.setToolTipText("Return back to menu");
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBackMousePressed(evt);
            }
        });

        lblUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblUpdateMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblUpdateMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblUpdateMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(lblRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(lblAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtReturnDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRentalDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator6)
                                .addComponent(txtISBN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                .addComponent(jSeparator5)
                                .addComponent(txtCardNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblExit, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblBack, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtCardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRentalDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblExit, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBack, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(44, 0, 44));
        jMenuBar1.setForeground(new java.awt.Color(66, 0, 66));

        menuFile.setForeground(new java.awt.Color(255, 255, 255));
        menuFile.setText("File");

        menuFileAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK));
        menuFileAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/plus-black-symbol (2).png"))); // NOI18N
        menuFileAdd.setText("Add");
        menuFileAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileAddActionPerformed(evt);
            }
        });
        menuFile.add(menuFileAdd);

        menuFileUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.SHIFT_MASK));
        menuFileUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Update_Black.png"))); // NOI18N
        menuFileUpdate.setText("Update");
        menuFileUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileUpdateActionPerformed(evt);
            }
        });
        menuFile.add(menuFileUpdate);
        menuFile.add(jSeparator1);

        menuFilePrint.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK));
        menuFilePrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Print_Black.png"))); // NOI18N
        menuFilePrint.setText("Print");
        menuFile.add(menuFilePrint);

        menuFileBackup.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK));
        menuFileBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/BackUp.png"))); // NOI18N
        menuFileBackup.setText("Backup");
        menuFileBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileBackupActionPerformed(evt);
            }
        });
        menuFile.add(menuFileBackup);
        menuFile.add(jSeparator2);

        menuFileRefresh.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        menuFileRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Refresh_Black.png"))); // NOI18N
        menuFileRefresh.setText("Refresh");
        menuFileRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileRefreshActionPerformed(evt);
            }
        });
        menuFile.add(menuFileRefresh);
        menuFile.add(jSeparator3);

        menuFileMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK));
        menuFileMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Home_Black.png"))); // NOI18N
        menuFileMenu.setText("Menu");
        menuFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileMenuActionPerformed(evt);
            }
        });
        menuFile.add(menuFileMenu);
        menuFile.add(jSeparator4);

        menuFileQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_MASK));
        menuFileQuit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Quit_Red.png"))); // NOI18N
        menuFileQuit.setText("Quit");
        menuFileQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileQuitActionPerformed(evt);
            }
        });
        menuFile.add(menuFileQuit);

        jMenuBar1.add(menuFile);

        jMenu2.setForeground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Move");

        moveMenuMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK));
        moveMenuMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Home_Black.png"))); // NOI18N
        moveMenuMenu.setText("Menu");
        moveMenuMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveMenuMenuActionPerformed(evt);
            }
        });
        jMenu2.add(moveMenuMenu);

        moveMenuCustomers.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
        moveMenuCustomers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Customers_Black.png"))); // NOI18N
        moveMenuCustomers.setText("Customers");
        moveMenuCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveMenuCustomersActionPerformed(evt);
            }
        });
        jMenu2.add(moveMenuCustomers);

        moveMenuBooks.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_MASK));
        moveMenuBooks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Shelf.png"))); // NOI18N
        moveMenuBooks.setText("Books");
        moveMenuBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveMenuBooksActionPerformed(evt);
            }
        });
        jMenu2.add(moveMenuBooks);

        moveMenuManagement.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        moveMenuManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/Menu_Management_Black.png"))); // NOI18N
        moveMenuManagement.setText("Management");
        moveMenuManagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveMenuManagementActionPerformed(evt);
            }
        });
        jMenu2.add(moveMenuManagement);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    History history = new History();
   
    public boolean isTableEmpty(String CardNumber) {
        ClearInfo(CardNumber);
        if(tableHistory.getRowCount() == 0) {
            return true;
        }
        return false;
    }
    
    private void setLabels() {
        Tools.PutImageInLable("Refresh-white.png", lblRefresh, 30, 30);
        Tools.PutImageInLable("add-512-white.png", lblAdd, 30, 30);
        Tools.PutImageInLable("Exit_Red.png", lblExit, 35, 35);
        Tools.PutImageInLable("Back_White.png", lblBack, 30, 30);
        Tools.PutImageInLable("pen.png", lblUpdate, 30, 30);
        Tools.PutImageInLable("Search-icon-White.png", lblSearch, 30, 30);
        Tools.PutImageInLable("Ascending_White.png", lblAscending, 30, 30);
        Tools.PutImageInLable("Descending_White.png", lblDescending, 30, 30);
        
        
        lblAscending.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblDescending.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblRefresh.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblAdd.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblExit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblBack.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblUpdate.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblSearch.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setTitle("Library System By Mini Project Team 6");
        Tools.SetTableHeader(tableHistory);
    }//GEN-LAST:event_formWindowOpened

    private void menuFileAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileAddActionPerformed
        try {
            Add();
        } catch (SQLException ex) {
            Logger.getLogger(FrmHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuFileAddActionPerformed

    private void menuFileUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileUpdateActionPerformed
        Update();
    }//GEN-LAST:event_menuFileUpdateActionPerformed

    private void menuFileRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileRefreshActionPerformed
        ClearInfo();
    }//GEN-LAST:event_menuFileRefreshActionPerformed

    private void menuFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileMenuActionPerformed
        this.dispose();
        Tools.OpenForm(new Menu());
    }//GEN-LAST:event_menuFileMenuActionPerformed

    private void menuFileQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileQuitActionPerformed
        boolean check = Tools.YesNoChooserBox("Do you want to quit?", "Exit!");
       if(check){
        System.exit(0);
       }
    }//GEN-LAST:event_menuFileQuitActionPerformed

    private void moveMenuMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveMenuMenuActionPerformed
        this.dispose();
        Tools.OpenForm(new Menu());
    }//GEN-LAST:event_moveMenuMenuActionPerformed

    private void moveMenuCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveMenuCustomersActionPerformed
        this.dispose();
        Tools.OpenForm(new FrmCustomers());
    }//GEN-LAST:event_moveMenuCustomersActionPerformed

    private void moveMenuBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveMenuBooksActionPerformed
    this.dispose();
        Tools.OpenForm(new FrmBooks());
    }//GEN-LAST:event_moveMenuBooksActionPerformed

    private void moveMenuManagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveMenuManagementActionPerformed
        this.dispose();
        Tools.OpenForm(new FrmManagement());
    }//GEN-LAST:event_moveMenuManagementActionPerformed

    private void lblUpdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUpdateMousePressed
        Update();
    }//GEN-LAST:event_lblUpdateMousePressed

    private void lblUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUpdateMouseEntered
        Tools.PutImageInLable("pen.png", lblUpdate, 45, 45);
    }//GEN-LAST:event_lblUpdateMouseEntered

    private void lblUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUpdateMouseExited
        Tools.PutImageInLable("pen.png", lblUpdate, 30, 30);
    }//GEN-LAST:event_lblUpdateMouseExited

    private void lblBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseEntered
        Tools.PutImageInLable("Back_White.png", lblBack, 45, 45);
    }//GEN-LAST:event_lblBackMouseEntered

    private void lblBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseExited
        Tools.PutImageInLable("Back_White.png", lblBack, 30, 30);
    }//GEN-LAST:event_lblBackMouseExited

    private void lblBackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMousePressed
        this.dispose();
        Tools.OpenForm(new Menu());
    }//GEN-LAST:event_lblBackMousePressed

    private void lblRefreshMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshMouseEntered
        Tools.PutImageInLable("Refresh-white.png", lblRefresh, 45, 45);
    }//GEN-LAST:event_lblRefreshMouseEntered

    private void lblRefreshMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshMouseExited
        Tools.PutImageInLable("Refresh-white.png", lblRefresh, 30, 30);
    }//GEN-LAST:event_lblRefreshMouseExited

    private void lblRefreshMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshMousePressed
        ClearInfo();
    }//GEN-LAST:event_lblRefreshMousePressed

    private void lblExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseEntered
        Tools.PutImageInLable("Exit_Red.png", lblExit, 50, 50);
    }//GEN-LAST:event_lblExitMouseEntered

    private void lblExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseExited
        Tools.PutImageInLable("Exit_Red.png", lblExit, 30, 30);
    }//GEN-LAST:event_lblExitMouseExited

    private void lblExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMousePressed
        boolean check = Tools.YesNoChooserBox("Do you want to quit?", "Exit!");
        if(check){
            System.exit(0);
        }
    }//GEN-LAST:event_lblExitMousePressed

    private void lblAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMousePressed
        try {
            Add();

        } catch (SQLException ex) {
            Logger.getLogger(FrmHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblAddMousePressed

    private void lblAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseExited
        Tools.PutImageInLable("add-512-white.png", lblAdd, 30, 30);
    }//GEN-LAST:event_lblAddMouseExited

    private void lblAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseEntered
        Tools.PutImageInLable("add-512-white.png", lblAdd, 45, 45);
    }//GEN-LAST:event_lblAddMouseEntered

    private void txtReturnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReturnDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReturnDateActionPerformed

    private void txtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtISBNActionPerformed

    }//GEN-LAST:event_txtISBNActionPerformed

    private void txtCardNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCardNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCardNumberActionPerformed

    private void menuFileBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileBackupActionPerformed
         Tools.OpenForm(new Loading());
    }//GEN-LAST:event_menuFileBackupActionPerformed

    private void lblSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseEntered
        Tools.PutImageInLable("Search-icon-White.png", lblSearch, 45, 45);
    }//GEN-LAST:event_lblSearchMouseEntered

    private void lblSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseExited
        Tools.PutImageInLable("Search-icon-White.png", lblSearch, 30, 30);
    }//GEN-LAST:event_lblSearchMouseExited

    private void lblSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseClicked
        String Statement = "Select * from History where ";
        String Statement2 = " like '%"+ txtSearch.getText()+ "%' ";
        if (RadISBN.isSelected()){
            Statement += " ISBN " + Statement2;
        }
        else if (radCardNumber.isSelected()){
            Statement += " CardNumber " + Statement2;
        }
        else if (radTitle.isSelected()){
            Statement += " Title " + Statement2;
        }
        else if (radAuthor.isSelected()){
            Statement += " Author " + Statement2;
        }
        else if (radStatus.isSelected()){
            Statement += " Status " + Statement2;
        }
        else if (radRentalDate.isSelected()){
            Statement += " Rental_Date " + Statement2;
        }
        else if (radReturnDate.isSelected()){
            Statement += " Return_Date " + Statement2;
        }

        history.GetSomeRows(Statement, tableHistory);
        int Row = tableHistory.getRowCount();
        if (Row == 0){
            Tools.MsgBoxErrorX("No result!","Searching not found");
            ClearInfo();
            txtSearch.requestFocus();
        }
    }//GEN-LAST:event_lblSearchMouseClicked

    private void radAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radAuthorActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void tableHistoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableHistoryKeyReleased
        SelectInfo();
    }//GEN-LAST:event_tableHistoryKeyReleased

    private void tableHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHistoryMouseClicked
        SelectInfo();
    }//GEN-LAST:event_tableHistoryMouseClicked

    private void radRentalDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radRentalDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radRentalDateActionPerformed

    private void lblDescendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDescendingMouseClicked
        OrderItems("desc");
    }//GEN-LAST:event_lblDescendingMouseClicked

    private void lblDescendingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDescendingMouseExited
        Tools.PutImageInLable("Descending_White.png", lblDescending, 30, 30);
    }//GEN-LAST:event_lblDescendingMouseExited

    private void lblDescendingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDescendingMouseEntered
        Tools.PutImageInLable("Descending_White.png", lblDescending, 45, 45);
    }//GEN-LAST:event_lblDescendingMouseEntered

    private void lblAscendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAscendingMouseClicked
        OrderItems("asc");
    }//GEN-LAST:event_lblAscendingMouseClicked

    private void lblAscendingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAscendingMouseExited
        Tools.PutImageInLable("Ascending_White.png", lblAscending, 30, 30);
    }//GEN-LAST:event_lblAscendingMouseExited

    private void lblAscendingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAscendingMouseEntered
        Tools.PutImageInLable("Ascending_White.png", lblAscending, 45, 45);
    }//GEN-LAST:event_lblAscendingMouseEntered

    
    private void OrderItems(String order) {
        String Statement = "Select * from History order by ";
        if (RadISBN.isSelected()){
            Statement += " ISBN " + order;
        }
        else if (radCardNumber.isSelected()){
            Statement += " CardNumber " + order;
            
        }
        else if (radAuthor.isSelected()){
             Statement += " Author " + order;
        }
         else if (radStatus.isSelected()){
             Statement += " Status " + order;
        }
        else if (radTitle.isSelected()){
             Statement += " Title " + order;
        }
         else if (radRentalDate.isSelected()){
             Statement += " Rental_Date " + order;
        }
        else if (radReturnDate.isSelected()){
             Statement += " Return_Date " + order;
        }
        history.GetSomeRows(Statement, tableHistory);
    }
    
    private final static long RETURN_IN_DAYS = 14;
    
      private void CheckDelayedOrders() {
          int rows = tableHistory.getRowCount();
          DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
          Date date = new Date();
          String currentDate = dateFormat.format(date);
          
          String rentalDate = null;
          
          for (int i = 0; i < rows; i++) {
            rentalDate = tableHistory.getValueAt(i, 5).toString();
            
            System.out.println(tableHistory.getValueAt(i, 4));
            long days = Tools.CalculateDaysBetween(currentDate, rentalDate);
            if(days > RETURN_IN_DAYS && !tableHistory.getValueAt(i, 4).toString().equals("returned")) {
                history.setISBN(Integer.parseInt(tableHistory.getValueAt(i, 1).toString()));
                history.setCardNumber(Integer.parseInt(tableHistory.getValueAt(i, 0).toString()));
                history.UpdateDelayed();
                SendEmailDelayed();
            }
          }
          ClearInfo();
      }
      
    private void Add() throws SQLException{
    if (!NoEmptyTextField()){
             PutInfo();
             history.Add();
             ClearInfo();    
        }     
        else {
            Tools.MsgBoxError1("Please fill all field...", "Empty Field or Boxes");
        }    
    }
    private boolean NoEmptyTextField(){
    if (txtCardNumber.getText().equals("") || txtISBN.getText().equals("") || txtRentalDate.getText().equals("") 
            || txtReturnDate.getText().equals("")){
        return true;
    }
    return false;
    }
    
    private void PutInfo() throws SQLException {
        history.setCardNumber(Integer.parseInt(txtCardNumber.getText()));
        history.setISBN(Integer.parseInt(txtISBN.getText()));
        history.setRentalDate(txtRentalDate.getText());
        history.setReturnedDate(txtReturnDate.getText());
        history.setAttributes();
    }
    
    private void ClearInfo() {
        txtCardNumber.setText("");
        txtISBN.setText("");
        txtRentalDate.setText("");
        txtReturnDate.setText("");
        history.GetTableInfo("History", tableHistory);
    }
    
    private void ClearInfo(String CardNumber) {
        txtCardNumber.setText("");
        txtISBN.setText("");
        txtRentalDate.setText("");
        txtReturnDate.setText("");
        
        String statement = "Select * From History "
                + "Where CardNumber = " + CardNumber;
        Connections.FillCustomRows(statement, tableHistory);
    }
    
    private void Update() {
        SelectInfo();
        try {
            PutInfo();
        } catch (SQLException ex) {
            Logger.getLogger(FrmHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
        history.UpdateReturned();
        ClearInfo();
    }
    
    private void SelectInfo(){
        int Row = tableHistory.getSelectedRow();
                try {
    txtCardNumber.setText(tableHistory.getValueAt(Row, 0).toString() );
    txtISBN.setText(tableHistory.getValueAt(Row,1).toString() );
    txtRentalDate.setText(tableHistory.getValueAt(Row, 5).toString());
    txtReturnDate.setText(tableHistory.getValueAt(Row, 6).toString());
    
                 }catch(Exception ex){
                Tools.MsgBox(ex.getMessage());
                }
    }
    
    private void SendEmailDelayed() {
        String recieverEmail;
        try {
            recieverEmail = history.getCustomerEmail();
             Tools.SendEmail(recieverEmail, "Delayed book at the Library", "You have borrowed a book from our library and you have not returned it, despite passing the returned date." + 
                    System.lineSeparator() + "You will be charged 2 SEK per day from the day you had to return the book.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RadISBN;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAdd;
    private javax.swing.JLabel lblAscending;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblDescending;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblRefresh;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblUpdate;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileAdd;
    private javax.swing.JMenuItem menuFileBackup;
    private javax.swing.JMenuItem menuFileMenu;
    private javax.swing.JMenuItem menuFilePrint;
    private javax.swing.JMenuItem menuFileQuit;
    private javax.swing.JMenuItem menuFileRefresh;
    private javax.swing.JMenuItem menuFileUpdate;
    private javax.swing.JMenuItem moveMenuBooks;
    private javax.swing.JMenuItem moveMenuCustomers;
    private javax.swing.JMenuItem moveMenuManagement;
    private javax.swing.JMenuItem moveMenuMenu;
    private javax.swing.JRadioButton radAuthor;
    private javax.swing.JRadioButton radCardNumber;
    private javax.swing.JRadioButton radRentalDate;
    private javax.swing.JRadioButton radReturnDate;
    private javax.swing.JRadioButton radStatus;
    private javax.swing.JRadioButton radTitle;
    private javax.swing.JTable tableHistory;
    private Controls.JTextBox txtCardNumber;
    private Controls.JTextBox txtISBN;
    private Controls.JTextBox txtRentalDate;
    private Controls.JTextBox txtReturnDate;
    private Controls.JTextBox txtSearch;
    // End of variables declaration//GEN-END:variables

  

  
}
