/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.*;
import Connection.Connections;
import Connection.Tools;
import Controls.*;
import Classes.Books;
import Classes.History;
import Classes.Return;
import Connection.TableNewColors;
import Connection.Tools;
import java.awt.Color;
import java.awt.Cursor;
import java.io.File;
import static javax.imageio.ImageIO.getCacheDirectory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.awt.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author Death-PC
 */
public class FrmHistoryC extends javax.swing.JFrame {
static String email;
static String card;

    public FrmHistoryC(String card, String name,String Email){
        initComponents();
        tableHistory.setDefaultRenderer(Object.class, new TableNewColors());
          Tools.PutImageInLable("back32.png", lblBack, 32, 32);
           Tools.PutImageInLable("exitW.png", lblExit, 32, 32);
            Tools.PutImageInLable("Ascending_White.png", lblAscending, 30, 30);
            Tools.PutImageInLable("Descending_White.png", lblDescending, 30, 30);
               Tools.PutImageInLable("Search-icon-White.png", lblSearsh, 25, 25);
      
         this.card = card;
         email = Email;
        String Statement = " Select * from History where CardNumber ="+card +";";
           //  Connection.Connections.FillCustomRows(Statement, tableHistory);

        Connections.FillCustomRows(Statement, tableHistory);
     // history.GetSomeRows(Statement, tableHistory);
        
    }
  //  private void ClearInfo(String email) {     //EMAIL 
    // this.cardNumber =         Connections.GetCustomerCardNumber(email);
      //  String statement = "Select * From History "
        //        + "Where CardNumber = " + cardNumber;
       // Connections.FillCustomRows(statement, tableHistory);
    //}
    /**
     * Creates new form FrmHistoryC
     */
    
    
    public FrmHistoryC()  {
        //how to fetch cardnumber
      //String email;
      //email = txtemail.getText();
      //Connections.GetCustomerCardNumber(email);
       //ClearInfo(email);
        initComponents();
        
    }
History history = new History();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();
        lblExit = new javax.swing.JLabel();
        tableHistory = new javax.swing.JTable();
        RadISBN = new javax.swing.JRadioButton();
        radTitle = new javax.swing.JRadioButton();
        radAuthor = new javax.swing.JRadioButton();
        radStatus = new javax.swing.JRadioButton();
        radRentalDate = new javax.swing.JRadioButton();
        radReturnDate = new javax.swing.JRadioButton();
        txtemail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        lblSearsh = new javax.swing.JLabel();
        lblDescending = new javax.swing.JLabel();
        lblAscending = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(66, 0, 66));

        jPanel1.setBackground(new java.awt.Color(44, 0, 44));
        jPanel1.setForeground(new java.awt.Color(66, 0, 66));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Footlight MT Light", 3, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Connection/Icons/books-stack-from-top-view (1).png"))); // NOI18N
        jLabel5.setText("History");

        lblBack.setToolTipText("Return back to menu");
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBackMousePressed(evt);
            }
        });

        lblExit.setToolTipText("Exit");
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblExitMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblExitMousePressed(evt);
            }
        });

        tableHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Card Number", "ISBN", "Title", "Author", "Status", "Rental Date", "Return Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHistoryMouseClicked(evt);
            }
        });
        tableHistory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableHistoryKeyReleased(evt);
            }
        });

        RadISBN.setBackground(new java.awt.Color(44, 0, 44));
        RadISBN.setForeground(new java.awt.Color(255, 255, 255));
        RadISBN.setText("ISBN");

        radTitle.setBackground(new java.awt.Color(44, 0, 44));
        radTitle.setForeground(new java.awt.Color(255, 255, 255));
        radTitle.setText("Title");

        radAuthor.setBackground(new java.awt.Color(44, 0, 44));
        radAuthor.setForeground(new java.awt.Color(255, 255, 255));
        radAuthor.setText("Author");
        radAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAuthorActionPerformed(evt);
            }
        });

        radStatus.setBackground(new java.awt.Color(44, 0, 44));
        radStatus.setForeground(new java.awt.Color(255, 255, 255));
        radStatus.setText("Status");

        radRentalDate.setBackground(new java.awt.Color(44, 0, 44));
        radRentalDate.setForeground(new java.awt.Color(255, 255, 255));
        radRentalDate.setText("Rental Date");
        radRentalDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radRentalDateActionPerformed(evt);
            }
        });

        radReturnDate.setBackground(new java.awt.Color(44, 0, 44));
        radReturnDate.setForeground(new java.awt.Color(255, 255, 255));
        radReturnDate.setText("Return Date");

        txtemail.setBackground(new java.awt.Color(64, 1, 64));
        txtemail.setForeground(new java.awt.Color(255, 255, 255));
        txtemail.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtemail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtemailMouseClicked(evt);
            }
        });
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Baghdad", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Search Option:");

        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));

        lblSearsh.setToolTipText("Search");
        lblSearsh.setMaximumSize(new java.awt.Dimension(50, 50));
        lblSearsh.setMinimumSize(new java.awt.Dimension(50, 50));
        lblSearsh.setPreferredSize(new java.awt.Dimension(50, 50));
        lblSearsh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSearshMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSearshMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSearshMouseExited(evt);
            }
        });

        lblDescending.setToolTipText("Order items Descending");
        lblDescending.setMaximumSize(new java.awt.Dimension(50, 50));
        lblDescending.setMinimumSize(new java.awt.Dimension(50, 50));
        lblDescending.setPreferredSize(new java.awt.Dimension(50, 50));
        lblDescending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDescendingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDescendingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDescendingMouseExited(evt);
            }
        });

        lblAscending.setToolTipText("Order items Ascending ");
        lblAscending.setMaximumSize(new java.awt.Dimension(50, 50));
        lblAscending.setMinimumSize(new java.awt.Dimension(50, 50));
        lblAscending.setPreferredSize(new java.awt.Dimension(50, 50));
        lblAscending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAscendingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAscendingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAscendingMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblBack, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblExit, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblSearsh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAscending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDescending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(RadISBN)
                        .addGap(18, 18, 18)
                        .addComponent(radTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radAuthor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radRentalDate)
                        .addGap(4, 4, 4)
                        .addComponent(radReturnDate)
                        .addGap(129, 129, 129))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(tableHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RadISBN)
                            .addComponent(radTitle)
                            .addComponent(radAuthor)
                            .addComponent(radStatus)
                            .addComponent(radReturnDate)
                            .addComponent(radRentalDate))
                        .addGap(29, 29, 29)
                        .addComponent(tableHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBack, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblExit, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSearsh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAscending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radAuthorActionPerformed

    private void radRentalDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radRentalDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radRentalDateActionPerformed

    private void tableHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHistoryMouseClicked
  
    }//GEN-LAST:event_tableHistoryMouseClicked

    private void tableHistoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableHistoryKeyReleased
  
    }//GEN-LAST:event_tableHistoryKeyReleased

    private void lblBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseEntered
        Tools.PutImageInLable("Back_White.png", lblBack, 45, 45);
    }//GEN-LAST:event_lblBackMouseEntered

    private void lblBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseExited
        Tools.PutImageInLable("Back_White.png", lblBack, 30, 30);
    }//GEN-LAST:event_lblBackMouseExited

    private void lblBackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMousePressed
        this.dispose();
        Tools.OpenForm(new Menu());
    }//GEN-LAST:event_lblBackMousePressed

    private void lblExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseEntered
        Tools.PutImageInLable("Exit_Red.png", lblExit, 50, 50);
    }//GEN-LAST:event_lblExitMouseEntered

    private void lblExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseExited
        Tools.PutImageInLable("Exit_Red.png", lblExit, 30, 30);
    }//GEN-LAST:event_lblExitMouseExited

    private void lblExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMousePressed
        boolean check = Tools.YesNoChooserBox("Do you want to quit?", "Exit!");
        if(check){
            System.exit(0);
        }
        
    }//GEN-LAST:event_lblExitMousePressed

    private void txtemailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtemailMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailMouseClicked

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void lblSearshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearshMouseClicked
      
        String Statement = "Select * from Books where ";
        String Statement2 = " like '%"+ txtemail.getText()+ "%' ";
        String Statement3 = "Where CardNumber = " + card; 
        if (RadISBN.isSelected()){
            Statement += " ISBN " + Statement2+Statement3;
        }
        else if (radTitle.isSelected()){
            Statement += " Title " + Statement2+Statement3;
        }
        else if (radRentalDate.isSelected()){
            Statement += " Rental_Date " + Statement2+Statement3;
        }
        else if (radAuthor.isSelected()){
            Statement += " Author " + Statement2+Statement3;
        }
        else if (radReturnDate.isSelected()){
            Statement += " Returned_Date " + Statement2+Statement3;
        }
        else if (radStatus.isSelected()){
            Statement += " Status " + Statement2+Statement3;
        }

        history.GetSomeRows(Statement, tableHistory);
        int Row = tableHistory.getRowCount();
        if (Row == 0){
            Tools.MsgBoxErrorX("No result!","Search not found");
            }
    }//GEN-LAST:event_lblSearshMouseClicked

    private void lblSearshMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearshMouseEntered
        Tools.PutImageInLable("Search-icon-White.png", lblSearsh, 45, 45);
    }//GEN-LAST:event_lblSearshMouseEntered

    private void lblSearshMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearshMouseExited
        Tools.PutImageInLable("Search-icon-White.png", lblSearsh, 30, 30);
    }//GEN-LAST:event_lblSearshMouseExited

    private void lblDescendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDescendingMouseClicked
        OrderItems("desc");
    }//GEN-LAST:event_lblDescendingMouseClicked

    private void lblDescendingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDescendingMouseEntered
        Tools.PutImageInLable("Descending_White.png", lblDescending, 45, 45);
    }//GEN-LAST:event_lblDescendingMouseEntered

    private void lblDescendingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDescendingMouseExited
        Tools.PutImageInLable("Descending_White.png", lblDescending, 30, 30);
    }//GEN-LAST:event_lblDescendingMouseExited

    private void lblAscendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAscendingMouseClicked
        OrderItems("asc");
    }//GEN-LAST:event_lblAscendingMouseClicked

    private void lblAscendingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAscendingMouseEntered
        Tools.PutImageInLable("Ascending_White.png", lblAscending, 45, 45);
    }//GEN-LAST:event_lblAscendingMouseEntered

    private void lblAscendingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAscendingMouseExited
        Tools.PutImageInLable("Ascending_White.png", lblAscending, 30, 30);
    }//GEN-LAST:event_lblAscendingMouseExited

    
    private void OrderItems(String OrderBy){
        
     String Statement = "Select * from History where CardNumber ="+card ;
        if (RadISBN.isSelected()){
            Statement += " ISBN " + OrderBy;
        }
        else if (radTitle.isSelected()){
            Statement += " Title " + OrderBy;
            
        }
        
        else if (radStatus.isSelected()){
             Statement += " Status " + OrderBy;
        }
        else {
             Statement += " ISBN " + OrderBy;
        }
        history.GetSomeRows(Statement, tableHistory);
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmHistoryC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmHistoryC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmHistoryC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmHistoryC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmHistoryC().setVisible(true);
            }
        });
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RadISBN;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel lblAscending;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblDescending;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblSearsh;
    private javax.swing.JRadioButton radAuthor;
    private javax.swing.JRadioButton radRentalDate;
    private javax.swing.JRadioButton radReturnDate;
    private javax.swing.JRadioButton radStatus;
    private javax.swing.JRadioButton radTitle;
    private javax.swing.JTable tableHistory;
    private javax.swing.JTextField txtemail;
    // End of variables declaration//GEN-END:variables
}
